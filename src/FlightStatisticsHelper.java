import java.util.HashMap;
import java.util.Map;

/**
 * Class which does different statistical calculation about airline traffic
 * to be used on different data inputs generated by the FileHandler class
 * @author SpycherS
 *
 */
public class FlightStatisticsHelper {
	/**
	 * Search a map and return the key:value pair with the highest value
	 * Key need to be strings
	 * Values need to be integers
	 * @param map			a map you wish to search for the highest entry
	 * @return maxEntry		the highest entry of the map
	 */
	public static Map.Entry<String, Integer> getHighestValue(Map<String, Integer> map){
		
		Map.Entry<String, Integer> maxEntry = null;
		for (Map.Entry<String, Integer> entry : map.entrySet()) {
			if(maxEntry == null || entry.getValue().compareTo(maxEntry.getValue()) > 0) {
				maxEntry = entry;
			}
		}
		return maxEntry;
	}
	
	/**
	 * Search a map and return the key:value pair with the highest value
	 * Key need to be strings
	 * Values need to be doubles
	 * @param map			a map you wish to search for the highest entry
	 * @return maxEntry		the highest entry of the map
	 */
	public static Map.Entry<String, Double> getHighestValueDouble(Map<String, Double> map){
		
		Map.Entry<String, Double> maxEntry = null;
		for (Map.Entry<String, Double> entry : map.entrySet()) {
			if(maxEntry == null || entry.getValue().compareTo(maxEntry.getValue()) > 0) {
				maxEntry = entry;
			}
		}
		return maxEntry;
	}
	
	/**
	 * Takes two maps with identical keys, and divides their values
	 * returns a new map with the same map and the divided values as a double
	 * return values are in percentage rounded to two numbers after the comma
	 * @param map1
	 * @param map2
	 * @return
	 */
	public static HashMap<String, Double> dividePercentageValuesOfTwoMaps(Map<String, Integer> map1, Map<String, Integer> map2){
		HashMap<String, Double> outputMap = new HashMap<String, Double>();
		
		for(Map.Entry<String, Integer> entry : map1.entrySet()) {
			double percentage =  entry.getValue() / (double) map2.get(entry.getKey()) * 100;
			//if you want to round the percentage, uncomment the corresponding lines
			//double rounded = Math.round(percentage * 100) / 100.0; // two decimal points
			//double rounded = Math.round(percentage * 10) / 10.0; // one decimal point
			//outputMap.put(entry.getKey(), rounded);
			outputMap.put(entry.getKey(), percentage);
		}
		
		return outputMap;
	}
}